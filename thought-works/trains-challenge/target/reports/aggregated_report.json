{"com.julianosena.coursera.algorithm.part.two.usecase.GetDistanceFromTownsConnectionAndTheirDistancesUseCaseSpec":{"executedFeatures":["Should return a distance from Towns Connection and their distances input"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"successRate":1.0,"time":23}},"com.julianosena.coursera.algorithm.part.two.usecase.GetDistanceFromRouteUseCaseSpec":{"executedFeatures":["Should return a right distance from A-B-C route","Should return a right distance from A-D route","Should return a right distance from A-D-C route","Should return a right distance from A-E-B-C-D route","Should return a right distance from A-E-D route"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":5,"successRate":1.0,"time":25}},"com.julianosena.coursera.algorithm.part.two.usecase.GetLastTownFromTownsConnectionAndTheirDistancesUseCaseSpec":{"executedFeatures":["Should return a last Town instance from Towns Connection and their distances input"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"successRate":1.0,"time":4}},"com.julianosena.coursera.algorithm.part.two.usecase.GetTripsAmountStartsInTownAndEndingAnotherTownMaximumStopsUseCaseSpec":{"executedFeatures":["Should return 1 for number of trips starting at C and ending at C with maximum 3 stops","Should return 2 for the number of trips starting at C and ending at C with maximum 3 stops"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"successRate":1.0,"time":18}},"com.julianosena.coursera.algorithm.part.two.usecase.GetTripsAmountStartsInTownAndEndingAnotherTownExactlyStopsUseCaseSpec":{"executedFeatures":["Should return 1 for number of trips starting at C and ending at C with maximum 3 stops","Should return 2 for the number of trips starting at C and ending at C with maximum 3 stops"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"successRate":1.0,"time":15}},"com.julianosena.coursera.algorithm.part.two.usecase.GetDigraphUseCaseSpec":{"executedFeatures":["Should parse and return Digraph from towns connections and their distances input"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"successRate":1.0,"time":12}},"com.julianosena.coursera.algorithm.part.two.usecase.GetFirstTownFromTownsConnectionAndTheirDistancesUseCaseSpec":{"executedFeatures":["Should return a first Town instance from Towns Connection and their distances input"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"successRate":1.0,"time":3}},"com.julianosena.coursera.algorithm.part.two.usecase.GetAllTownsFromInputTownsConnectionsAndTheirDistancesUseCaseSpec":{"executedFeatures":["Should parse and return towns connection and their distances input"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"successRate":1.0,"time":6}}}